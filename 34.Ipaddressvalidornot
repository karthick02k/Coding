import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class IPAddressValidator {

    public static void main(String[] args) {
        String ipAddress = "192.168.12.75";
        
        if (isValidIPAddress(ipAddress)) {
            char ipClass = getIPAddressClass(ipAddress);
            System.out.println("Valid IP Address of class " + ipClass);
        } else {
            System.out.println("Invalid IP Address");
        }
    }

    
    public static boolean isValidIPAddress(String ipAddress) {
        String ipPattern = "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}"
                         + "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$";
        Pattern pattern = Pattern.compile(ipPattern);
        Matcher matcher = pattern.matcher(ipAddress);
        return matcher.matches();
    }

   
    public static char getIPAddressClass(String ipAddress) {
        String[] octets = ipAddress.split("\\.");
        int firstOctet = Integer.parseInt(octets[0]);

        if (firstOctet >= 1 && firstOctet <= 126) {
            return 'A';
        } else if (firstOctet >= 128 && firstOctet <= 191) {
            return 'B';
        } else if (firstOctet >= 192 && firstOctet <= 223) {
            return 'C';
        } else if (firstOctet >= 224 && firstOctet <= 239) {
            return 'D';
        } else if (firstOctet >= 240 && firstOctet <= 255) {
            return 'E';
        } else {
            return '?'; // If it doesn't fall into any valid range
        }
    }
}
